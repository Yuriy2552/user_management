name: Python application

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.11

    - name: Install Poetry
      run: |
        python -m pip install --upgrade pip
        python -m pip install poetry

    - name: Cache Poetry virtualenvs
      uses: actions/cache@v3
      with:
        path: ~/.cache/pypoetry/virtualenvs
        key: poetry-venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          poetry-venv-${{ runner.os }}-

    - name: Install dependencies with Poetry
      run: |
        poetry install --no-root
      working-directory: ${{ github.workspace }}

    - name: Check installed dependencies
      run: |
        poetry show
      working-directory: ${{ github.workspace }}

    - name: Set up PostgreSQL
      uses: Harmon758/postgresql-action@v2
      with:
        postgresql version: '13'
        db name: 'test_db'
        username: 'test_user'
        password: 'test_password'

    - name: Run database migrations (if applicable)
      env:
        DATABASE_URL: postgresql+asyncpg://test_user:test_password@localhost:5432/test_db
      run: |
        poetry run alembic upgrade head
      working-directory: ${{ github.workspace }}

    - name: Run tests
      env:
        DATABASE_URL: postgresql+asyncpg://test_user:test_password@localhost:5432/test_db
      run: |
        PYTHONPATH=. poetry run pytest
      working-directory: ${{ github.workspace }}
